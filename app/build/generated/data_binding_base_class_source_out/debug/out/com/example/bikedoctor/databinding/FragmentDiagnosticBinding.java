// Generated by view binder compiler. Do not edit!
package com.example.bikedoctor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bikedoctor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDiagnosticBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ListView diagnosisListView;

  @NonNull
  public final TextView diagnosticTitle;

  @NonNull
  public final TextView errorTextDiagnosis;

  @NonNull
  public final ProgressBar progressBarDiagnosis;

  @NonNull
  public final TextView servicesNumberDiagnosis;

  private FragmentDiagnosticBinding(@NonNull FrameLayout rootView,
      @NonNull ListView diagnosisListView, @NonNull TextView diagnosticTitle,
      @NonNull TextView errorTextDiagnosis, @NonNull ProgressBar progressBarDiagnosis,
      @NonNull TextView servicesNumberDiagnosis) {
    this.rootView = rootView;
    this.diagnosisListView = diagnosisListView;
    this.diagnosticTitle = diagnosticTitle;
    this.errorTextDiagnosis = errorTextDiagnosis;
    this.progressBarDiagnosis = progressBarDiagnosis;
    this.servicesNumberDiagnosis = servicesNumberDiagnosis;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDiagnosticBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDiagnosticBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_diagnostic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDiagnosticBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.diagnosis_list_view;
      ListView diagnosisListView = ViewBindings.findChildViewById(rootView, id);
      if (diagnosisListView == null) {
        break missingId;
      }

      id = R.id.diagnosticTitle;
      TextView diagnosticTitle = ViewBindings.findChildViewById(rootView, id);
      if (diagnosticTitle == null) {
        break missingId;
      }

      id = R.id.error_text_diagnosis;
      TextView errorTextDiagnosis = ViewBindings.findChildViewById(rootView, id);
      if (errorTextDiagnosis == null) {
        break missingId;
      }

      id = R.id.progress_bar_diagnosis;
      ProgressBar progressBarDiagnosis = ViewBindings.findChildViewById(rootView, id);
      if (progressBarDiagnosis == null) {
        break missingId;
      }

      id = R.id.servicesNumber_diagnosis;
      TextView servicesNumberDiagnosis = ViewBindings.findChildViewById(rootView, id);
      if (servicesNumberDiagnosis == null) {
        break missingId;
      }

      return new FragmentDiagnosticBinding((FrameLayout) rootView, diagnosisListView,
          diagnosticTitle, errorTextDiagnosis, progressBarDiagnosis, servicesNumberDiagnosis);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
